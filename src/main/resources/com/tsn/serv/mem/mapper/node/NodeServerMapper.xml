<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tsn.serv.mem.mapper.node.NodeServerMapper" >
  <resultMap id="BaseResultMap" type="com.tsn.serv.mem.entity.node.NodeServer" >
    <id column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="server_id" property="serverId" jdbcType="VARCHAR" />
    <result column="port_arr" property="portArr" jdbcType="INTEGER" />
    <result column="server_ip" property="serverIp" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="port_arr" property="portArr" jdbcType="VARCHAR" />
    <result column="is_used" property="isUsed" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    uuid, server_id, server_ip, port_arr, is_used, type, port_arr
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from v_mem_node_server
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  
  <select id="selectUseServer" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from v_mem_node_server
    where type=#{type,jdbcType=VARCHAR} and is_used = 0
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from v_mem_node_server
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tsn.serv.mem.entity.node.NodeServer" >
    insert into v_mem_node_server (uuid, server_id, port_arr, 
      is_used, server_ip)
    values (#{uuid,jdbcType=VARCHAR}, #{serverId,jdbcType=VARCHAR}, #{portArr,jdbcType=INTEGER}, 
      #{isUsed,jdbcType=VARCHAR}, #{serverIp,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tsn.serv.mem.entity.node.NodeServer" >
    insert into v_mem_node_server
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="serverId != null" >
        server_id,
      </if>
      <if test="v2Port != null" >
        port_arr,
      </if>
      <if test="isUsed != null" >
        is_used,
      </if>
      <if test="serverIp != null" >
        server_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="serverId != null" >
        #{serverId,jdbcType=VARCHAR},
      </if>
      <if test="v2Port != null" >
        #{portArr,jdbcType=INTEGER},
      </if>
      <if test="isUsed != null" >
        #{isUsed,jdbcType=VARCHAR},
      </if>
      <if test="serverIp != null" >
        #{serverIp,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tsn.serv.mem.entity.node.NodeServer" >
    update v_mem_node_server
    <set >
      <if test="serverId != null" >
        server_id = #{serverId,jdbcType=VARCHAR},
      </if>
      <if test="v2Port != null" >
        port_arr = #{portArr,jdbcType=INTEGER},
      </if>
      <if test="isUsed != null" >
        is_used = #{isUsed,jdbcType=VARCHAR},
      </if>
      <if test="serverIp != null" >
        server_ip = #{serverIp,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tsn.serv.mem.entity.node.NodeServer" >
    update v_mem_node_server
    set server_id = #{serverId,jdbcType=VARCHAR},
      port_arr = #{portArr,jdbcType=INTEGER},
      is_used = #{isUsed,jdbcType=VARCHAR},
      server_ip = #{serverIp,jdbcType=LONGVARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tsn.serv.mem.entity.node.NodeServer" >
    update v_mem_node_server
    set server_id = #{serverId,jdbcType=VARCHAR},
      port_arr = #{portArr,jdbcType=INTEGER},
      is_used = #{isUsed,jdbcType=VARCHAR}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>